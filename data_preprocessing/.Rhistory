ref <- system.file("extdata","reference.fa",package="Rsubread")
buildindex(basename="reference_index",reference=ref)
reads <- system.file("extdata","reads.txt.gz",package="Rsubread")
align.stat <- align(index="reference_index",readfile1=reads,output_file="alignResults.BAM",phredOffset=64)
ann <- data.frame(GeneID=c("gene1","gene1","gene2","gene2"),
Chr="chr_dummy",
Start=c(100,1000,3000,5000),
End=c(500,1800,4000,5500),
Strand=c("+","+","-","-"),
stringsAsFactors=FALSE)
fc_SE <- featureCounts("alignResults.BAM",annot.ext=ann)
fc_SE
input <- import.bam("alignResults.BAM")
input <- readBamFileAsGRanges("alignResults.BAM", index="reference_index")
install.packages("chromstaR")
BiocManager::install(" chromstaR")
BiocManager::install("chromstaR")
library(Rsubread)
library(GenomicRanges)
library(chromstaR)
input <- readBamFileAsGRanges("alignResults.BAM", index="reference_index")
input <- readBamFileAsGRanges(bamfile = "alignResults.BAM", index="reference_index")
input <- readBamFileAsGRanges(bamfile = "alignResults.BAM", bamindex="reference_index")
knitr::opts_chunk$set(echo = TRUE)
library(GenomicRanges)
library(chromstaR)
AT = GenomeAxisTrack()
library(GenomicRanges)
library(chromstaR)
library(rtracklayer)
library(Gviz)
AT = GenomeAxisTrack()
data.track = DataTrack(binned.data,
strand="*", col.histogram='gray',
fill.histogram='black', name="data", col.axis="black")
file <- system.file("extdata","euratrans","lv-H3K4me3-BN-male-bio2-tech1.bam",
package="chromstaRData")
data(rn4_chrominfo)
binned.data <- binReads(file, assembly=rn4_chrominfo, binsizes=1000,
stepsizes=500, chromosomes='chr12')
AT = GenomeAxisTrack()
data.track = DataTrack(binned.data,
strand="*", col.histogram='gray',
fill.histogram='black', name="data", col.axis="black")
plotTracks(c(data.track, AT)
transcriptAnnotation="symbol", window="auto",
plotTracks(c(data.track, AT), transcriptAnnotation="symbol", window="auto",
type="histogram", cex.title=0.7, fontsize=10 )
model <- callPeaksUnivariate(binned.data, verbosity=0)
knitr::opts_chunk$set(echo = TRUE)
exportPeaks(model, filename="peaks.bed.gz")
library(GenomicRanges)
library(chromstaR)
library(rtracklayer)
library(Gviz)
file <- system.file("extdata","euratrans","lv-H3K4me3-BN-male-bio2-tech1.bam",
package="chromstaRData")
data(rn4_chrominfo)
binned.data <- binReads(file, assembly=rn4_chrominfo, binsizes=1000,
stepsizes=500, chromosomes='chr12')
AT = GenomeAxisTrack()
data.track = DataTrack(binned.data,
strand="*", col.histogram='gray',
fill.histogram='black', name="data", col.axis="black")
plotTracks(c(data.track, AT), transcriptAnnotation="symbol", window="auto",
type="histogram", cex.title=0.7, fontsize=10 )
model <- callPeaksUnivariate(binned.data, verbosity=0)
exportPeaks(model, filename="peaks.bed.gz")
exportPeaks(model, filename="")
plotGenomeBrowser(model, chr='chr12', start=1, end=1e6)[[1]]
plotGenomeBrowser(model, chr='chr12', start=1, end=1e6)
plotGenomeBrowser(model, chr='chr12', start=1, end=1e6)[[1]]
library(GenomicRanges)
library(chromstaR)
knitr::opts_chunk$set(echo = TRUE)
file <- system.file("extdata","euratrans","lv-H3K4me3-BN-male-bio2-tech1.bam",
package="chromstaRData")
data(rn4_chrominfo)
file <- system.file("extdata","euratrans","lv-H3K4me3-BN-male-bio2-tech1.bam",
package="chromstaRData")
data(file)
data(rn4_chrominfo)
BiocManager::install("GenomicAlignments")
library(GenomicAlignments)
file <- system.file("extdata","euratrans","lv-H3K4me3-BN-male-bio2-tech1.bam",
package="chromstaRData")
dummy_data <- readGAlignments(file)
data(rn4_chrominfo)
View(dummy_data)
head(dummy_data)
dummy_data
binned.data <- binReads(dummy_data, assembly=rn4_chrominfo, binsizes=1000,
stepsizes=500, chromosomes='chr12')
file <- system.file("extdata","euratrans","lv-H3K4me3-BN-male-bio2-tech1.bam",
package="chromstaRData")
dummy_data <- readGAlignments(file)
data(rn4_chrominfo)
binned.data <- binReads(dummy_data, assembly=rn4_chrominfo, binsizes=1000,
stepsizes=500, chromosomes='chr12')
binned.data <- binReads(dummy_data, assembly=rn4_chrominfo, binsizes=1000,
stepsizes=500, chromosomes='chr12', format = 'GRanges')
file <- system.file("extdata","euratrans","lv-H3K4me3-BN-male-bio2-tech1.bam",
package="chromstaRData")
dummy.data <- readGAlignments(file)
data(rn4_chrominfo)
binned.data <- binReads(dummy.data, assembly=rn4_chrominfo, binsizes=1000,
stepsizes=500, chromosomes='chr12', format = 'GRanges')
binned.data
model <- callPeaksUnivariate(binned.data, verbosity=0)
plotGenomeBrowser(model, chr='chr12', start=1, end=1e6)[[1]]
model <- callPeaksUnivariate(binned.data, verbosity=0)
plotGenomeBrowser(model, chr='chr12', start=1, end=1e5)[[1]]
model <- callPeaksUnivariate(binned.data, verbosity=0)
plotGenomeBrowser(model, chr='chr12', start=1, end=1e6)[[1]]
View(rn4_chrominfo)
binned.data <- binReads(dummy.data, assembly=rn4_chrominfo, binsizes=2000,
stepsizes=1000, chromosomes='chr12', format = 'GRanges')
model <- callPeaksUnivariate(binned.data, verbosity=0)
plotGenomeBrowser(model, chr='chr12', start=1, end=1e6)[[1]]
file.path <- system.file("extdata","euratrans", package='chromstaRData')
files <- - list.files(file.path,
pattern="H3K27me3.*SHR.*bam$",
full.names=TRUE)[1:3]
file.path <- system.file("extdata","euratrans", package='chromstaRData')
files <- list.files(file.path,
pattern="H3K27me3.*SHR.*bam$",
full.names=TRUE)[1:3]
exp <- data.frame(file=files, mark='H3K27me3', condition='SHR', replicate=1:4,
pairedEndReads=FALSE, controlFiles=NA)
file.path <- system.file("extdata","euratrans", package='chromstaRData')
files <- list.files(file.path,
pattern="H3K27me3.*SHR.*bam$",
full.names=TRUE)[1:3]
exp <- data.frame(file=files, mark='H3K27me3', condition='SHR', replicate=1:3,
pairedEndReads=FALSE, controlFiles=NA)
View(exp)
library(chromstaR)
library(Gvis)
library(GVis)
BiocManager::install("GVis")
BiocManager::install("Gvis")
library(Gviz)
knitr::opts_chunk$set(echo = TRUE)
library(biomaRt)
ensembl <- useEnsembl(biomart='ENSEMBL_MART_ENSEMBL',
dataset='rnorvegicus_gene_ensembl')
genes <- getBM(attributes=c('ensembl_gene_id',
'chromosome_name',
'start_position',
'end_position',
'strand',
'external_gene_name','gene_biotype'),
mart=ensembl)
genes <- GRanges(seqnames=paste0('chr',genes$chromosome_name),
ranges=IRanges(start=genes$start, end=genes$end),
strand=genes$strand,
name=genes$external_gene_name, biotype=genes$gene_biotype)
# Rename chrMT to chrM to avoid warnings
seqlevels(genes)[seqlevels(genes)=='chrMT'] <- 'chrM'
# Select only chr12 to avoid warnings
genes <- keepSeqlevels(genes, 'chr12', pruning.mode = 'coarse')
file <- system.file("extdata","euratrans","lv-H3K4me3-BN-male-bio2-tech1.bam",
package="chromstaRData")
dummy.data <- readGAlignments(file)
data(rn4_chrominfo)
binned.data <- binReads(file)
model <- callPeaksUnivariate(binned.data)
library(biomaRt)
ensembl <- useEnsembl(biomart='ENSEMBL_MART_ENSEMBL',
dataset='rnorvegicus_gene_ensembl')
genes <- getBM(attributes=c('ensembl_gene_id',
'chromosome_name',
'start_position',
'end_position',
'strand',
'external_gene_name','gene_biotype'),
mart=ensembl)
genes <- GRanges(seqnames=paste0('chr',genes$chromosome_name),
ranges=IRanges(start=genes$start, end=genes$end),
strand=genes$strand,
name=genes$external_gene_name, biotype=genes$gene_biotype)
# Rename chrMT to chrM to avoid warnings
seqlevels(genes)[seqlevels(genes)=='chrMT'] <- 'chrM'
# Select only chr12 to avoid warnings
genes <- keepSeqlevels(genes, 'chr12', pruning.mode = 'coarse')
data.track <- DataTrack(binned.data)
genes.track <- AnnotationTrack(genes)
plotTracks(c(data.track, genes.track))
View(binned.data)
print(binned.data)
dummy.data
binned.data <- binReads(dummy.data)
binned.data <- binReads(dummy.data, format = "GRanges")
data.track <- DataTrack(binned.data)
genes.track <- AnnotationTrack(genes)
plotTracks(c(data.track, genes.track))
print(binned.data)
genes
genes_df <- as.data.frame(genes)
ggplot(genes_df, aes(x = start, xend = end, y = seqnames, yend = seqnames, color = gene_id)) +
geom_segment(size = 3) +
labs(x = "Genomic Position", y = "Chromosome", title = "Gene Locations") +
theme_minimal() +
scale_color_discrete(name = "Gene ID")
genes_df <- as.data.frame(genes)
ggplot(genes_df, aes(x = start, xend = end, y = seqnames, yend = seqnames, color = name)) +
geom_segment(linewidth = 3) +
labs(x = "Genomic Position", y = "Chromosome", title = "Gene Locations") +
theme_minimal() +
scale_color_discrete(name = "Gene ID")
genes_df <- as.data.frame(genes)
ggplot(genes_df, aes(x = start, xend = end, y = seqnames, yend = seqnames, color = name)) +
geom_segment(linewidth = 3) +
#labs(x = "Genomic Position", y = "Chromosome", title = "Gene Locations") +
theme_minimal() +
scale_color_discrete(name = "Gene ID")
plotEnrichment(hmm = model, annotation = genes)
plotEnrichment(hmm = model, annotation = genes, region = "start")
binned.data <- binReads(dummy.data, format = "GRanges", chromosomes = "chr12")
binned.data <- binReads(file, format = "GRanges", chromosomes = "chr12")
file <- system.file("extdata","euratrans","lv-H3K4me3-BN-male-bio2-tech1.bam",
package="chromstaRData")
dummy.data <- readGAlignments(file)
data(rn4_chrominfo)
binned.data <- binReads(file, format = "GRanges", chromosomes = "chr12")
binned.data <- binReads(file, assembly = rn4_chrominfo, format = "GRanges", chromosomes = "chr12")
binned.data <- binReads(file, assembly = rn4_chrominfo, format = "GRanges", chromosomes = "chr12")
binned.data <- binReads(file, assembly = rn4_chrominfo, format = "GRanges", chromosomes = "chr12")
binned.data <- binReads(file, assembly = rn4_chrominfo, chromosomes = "chr12")
model <- callPeaksUnivariate(binned.data)
library(biomaRt)
ensembl <- useEnsembl(biomart='ENSEMBL_MART_ENSEMBL',
dataset='rnorvegicus_gene_ensembl')
genes <- getBM(attributes=c('ensembl_gene_id',
'chromosome_name',
'start_position',
'end_position',
'strand',
'external_gene_name','gene_biotype'),
mart=ensembl)
genes <- GRanges(seqnames=paste0('chr',genes$chromosome_name),
ranges=IRanges(start=genes$start, end=genes$end),
strand=genes$strand,
name=genes$external_gene_name, biotype=genes$gene_biotype)
# Rename chrMT to chrM to avoid warnings
seqlevels(genes)[seqlevels(genes)=='chrMT'] <- 'chrM'
# Select only chr12 to avoid warnings
genes <- keepSeqlevels(genes, 'chr12', pruning.mode = 'coarse')
plotEnrichment(hmm = model, annotation = genes, region = "start")
binned.data <- binReads(dummy.data, format = "GRanges", assembly = rn4_chrominfo, chromosomes = "chr12")
model <- callPeaksUnivariate(binned.data)
plotEnrichment(hmm = model, annotation = genes, region = "start")
plotGenomeBrowser(genes)
plotHistogram(model)
data.track <- DataTrack(binned.data)
plotTracks(c(genes.track, data.track), type="histogram")
knitr::opts_chunk$set(echo = TRUE)
plotTracks(c(data.track, genes.track), type="histogram")
plotTracks(c(data.track, genes.track), type="histogram",
from = 1, to = 1e5)
AT = GenomeAxisTrack()
plotTracks(c(data.track, genes.track, AT), type="histogram",
from = 1, to = 1e5)
genes
genes.track <- AnnotationTrack(genes, id = genes$name)
plotTracks(c(data.track, genes.track, AT), type="histogram",
from = 1, to = 1e5, featureAnnotation = "id")
genes[name=="Brca2"]
plotTracks(c(data.track, genes.track, AT), type="histogram",
from = 1, to = 2e5, featureAnnotation = "id")
plotTracks(c(data.track, genes.track, AT), type="histogram",
from = 1, to = 12e4, featureAnnotation = "id")
plotTracks(c(data.track, genes.track, AT), type="histogram",
from = 1, to = 10e5, featureAnnotation = "id")
plotTracks(c(data.track, genes.track, AT), type="histogram",
from = 1, to = 1e5, featureAnnotation = "id")
plotTracks(c(data.track, genes.track, AT), type="histogram", featureAnnotation = "id")
plotTracks(c(data.track, genes.track, AT), type="histogram", featureAnnotation = "id")
genes <- getBM(attributes=c('ensembl_gene_id',
'chromosome_name',
'start_position',
'end_position',
'strand',
'external_gene_name','gene_biotype'),
mart=ensembl)
rds <- readRDS("C:\Users\malce\Downloads\gene_count_cleaned_sampled_100k.RDS")
file <- system.file("C:\Users\malce\Downloads\gene_count_cleaned_sampled_100k.RDS")
file <- system.file('C:\Users\malce\Downloads\gene_count_cleaned_sampled_100k.RDS')
rds <- readRDS("C:/Users/malce/Downloads/gene_count_cleaned_sampled_100k.RDS")
head(rds)
library(tidyverse)
rds <- as_tibble(rds)
dim(rds)
dimnames(rds)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Matrix)
expression_matrix <- readRDS("../data/OMIX928-99-02.rds") # not included in git
annotations <- read_csv("../data/OMIX928-24.csv", show_col_types = FALSE)
annotations <- annotations %>% select(Barcode, Celltype) %>%
filter(grepl("Erythroblast", Celltype)|
grepl("Cycling_Blood_Progenitor", Celltype)|
grepl("Macrophage", Celltype)|
grepl("Megakaryocyte_Progenitor", Celltype)|
grepl("Myeloid_Cell", Celltype)|
grepl("Blood_Progenitor", Celltype)) %>%
mutate(Celltype = replace(Celltype, grepl("Erythroblast", Celltype), "Erythroblast")) %>%
mutate(Celltype = replace(Celltype, grepl("Cycling_Blood_Progenitor", Celltype), "Cycling_Blood_Progenitor")) %>%
mutate(Celltype = replace(Celltype, grepl("Macrophage", Celltype), "Macrophage")) %>%
mutate(Celltype = replace(Celltype, grepl("Blood_Progenitor", Celltype), "Blood_Progenitor"))
expression_matrix <- expression_matrix[, annotations$Barcode]
row_sums <- rowSums(expression_matrix)
indx_genes <- which(row_sums < max(row_sums)/20)
expression_matrix <- expression_matrix[indx_genes,]
expression_matrix <- readRDS("../data/OMIX928-99-02.rds") # not included in git
annotations <- read_csv("../data/OMIX928-24.csv", show_col_types = FALSE)
annotations <- annotations %>% select(Barcode, Celltype) %>%
filter(grepl("Erythroblast", Celltype)|
grepl("Cycling_Blood_Progenitor", Celltype)|
grepl("Macrophage", Celltype)|
grepl("Megakaryocyte_Progenitor", Celltype)|
grepl("Myeloid_Cell", Celltype)|
grepl("Blood_Progenitor", Celltype)) %>%
mutate(Celltype = replace(Celltype, grepl("Erythroblast", Celltype), "Erythroblast")) %>%
mutate(Celltype = replace(Celltype, grepl("Cycling_Blood_Progenitor", Celltype), "Cycling_Blood_Progenitor")) %>%
mutate(Celltype = replace(Celltype, grepl("Macrophage", Celltype), "Macrophage")) %>%
mutate(Celltype = replace(Celltype, grepl("Blood_Progenitor", Celltype), "Blood_Progenitor"))
expression_matrix <- expression_matrix[, annotations$Barcode]
row_sums <- rowSums(expression_matrix)
indx_genes <- which(row_sums > max(row_sums)/100)
expression_matrix <- expression_matrix[indx_genes,]
saveRDS(expression_matrix, file = "../data/ATAC-Seq-filtered.rds")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(eval = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Matrix)
library(umap)
library(reticulate)
use_python("C:/Program Files/WindowsApps/PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0/python.exe")
library(tidyverse)
library(Matrix)
library(umap)
library(reticulate)
use_python("C:/Users/malce/AppData/Local/Microsoft/WindowsApps/python.exe")
library(tidyverse)
library(Matrix)
library(umap)
library(reticulate)
use_python("C:/Program Files/WindowsApps/PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0/python3.12.exe")
ATAC_expression_matrix <- readRDS("../data/ATAC-Seq-filtered.rds")
ATAC_annnotations <- read_csv("../data/ATAC_annotations.csv", show_col_types = FALSE)
ATAC_annnotations <- read_csv("../data/ATAC_annotations.csv", show_col_types = FALSE)
custom.config <- umap.defaults
custom.config$verbose <- 1
umap <- umap(t(ATAC_expression_matrix),
config = custom.config,
method = "umap-learn")
library(tidyverse)
library(Matrix)
library(umap)
library(reticulate)
use_python("C:/Program Files/WindowsApps/PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0/python3.12.exe")
ATAC_expression_matrix <- readRDS("../data/ATAC-Seq-filtered.rds")
ATAC_annnotations <- read_csv("../data/ATAC_annotations.csv", show_col_types = FALSE)
BiocManager::install("DESeq2")
knitr::opts_chunk$set(echo = TRUE)
library(DESeq2)
library(Matrix)
library(tidyverse)
RNA_expression_matrix <- readRDS("../data/pre_processed/RNA-Seq-filtered.rds")
RNA_expression_matrix <- RNA_expression_matrix + 1
RNA_annotations <- read_csv("../data/pre_processed/RNA_annotations.csv",show_col_types = FALSE)
dds <- DESeqDataSetFromMatrix(countData = RNA_expression_matrix,
colData = select(RNA_annotations, c("sample", "Sub_trajectory_name")),
design = ~ Sub_trajectory_name)
dea <- DESeq(dds, parallel = TRUE)
results <- results(dea)
plotMA(results)
res_df <- as_tibble(results)
View(res_df)
View(dea)
assay(vst(dds))
assay(vst(dea))
colData(dea)
rowData(dea)
View(RNA_annotations)
len(distinct(RNA_annotations$Sub_trajectory_name)
)
length(distinct(RNA_annotations$Sub_trajectory_name))
length(distinct(factor(RNA_annotations$Sub_trajectory_name)))
length(distinct(factor(RNA_annotations$Sub_trajectory_name)))
distinct(c('a', 'b', 'b'))
distinct(c(1,2,3,4,4))
nrow(distinct(RNA_annotations, Sub_trajectory_name))
distinct(RNA_annotations, Sub_trajectory_name)
knitr::opts_chunk$set(echo = TRUE)
expression_matrix <- readRDS("../data/unprocessed/gene_count_cleaned.RDS") # not included in git
annotations <- read_csv("../data/unprocessed/cell_annotate.csv", show_col_types = FALSE)
annotations <- annotations %>%
filter(Sub_trajectory_name %in% c("Definitive erythroid trajectory",
"White blood cell trajectory",
"primitive erythroid trajectory",
"Megakaryocyte trajectory"),
Total_mRNAs >= 400,
doublet_cluster == FALSE,
detected_doublet == FALSE)%>%
select(sample, Main_cell_type, Main_trajectory, Sub_trajectory_name)
distinct(annotations, Sub_trajectory_name)
write_csv(annotations, "../data/pre_processed/RNA_annotations.csv")
expression_matrix <- expression_matrix[,annotations$sample]
row_max <- apply(expression_matrix, 1, max)
indx_genes <- which(row_max > 10)
expression_matrix <- expression_matrix[indx_genes,]
saveRDS(expression_matrix, file = "../data/pre_processed/RNA-Seq-filtered.rds")
library(DESeq2)
library(Matrix)
library(tidyverse)
library(BiocParallel)
register(MulticoreParam(4))
library(DESeq2)
library(Matrix)
library(tidyverse)
library(BiocParallel)
register(SnowParam(4))
RNA_expression_matrix <- readRDS("../data/pre_processed/RNA-Seq-filtered.rds")
RNA_expression_matrix <- RNA_expression_matrix + 1
RNA_annotations <- read_csv("../data/pre_processed/RNA_annotations.csv",show_col_types = FALSE)
distinct(RNA_annotations, Main_trajectory)
data <- readRDS("C:/Users/malce/Downloads/OMIX928-99-01.rds")
head(data)
max(data[1,:])
max(data[1,])
max(data[25,])
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Matrix)
data <- read_delim("../data/unprocessed/scATAC_SpinalCord_E13_5.fragments.tsv/scATAC_SpinalCord_E13_5.fragments.tsv")
View(data)
length(distinct(data, 4))
data <- readRDS("../data/unprocessed/OMIX-99-01.rds")
data <- readRDS("../data/unprocessed/OMIX928-99-01.rds")
data <- readRDS("../data/unprocessed/OMIX928-99-01.rds")
setwd("F:/DS_Project/data_preprocessing")
data <- readRDS("../data/unprocessed/OMIX928-99-01.rds")
head(data)
max(data)
knitr::opts_chunk$set(echo = TRUE)
library(Matrix)
library(tidyverse)
RNA_data <- readRDS("../data/pre_processed/RNA-Seq-filtered.rds")
DEG <- read_csv("../DESeq/genes_by_sig.csv")
DEG <- DEG %>%
filter(padj <= 0.05) %>%
distinct(gene, .keep_all = TRUE) %>%
head(200)
RNA_data <- RNA_data[DEG$gene,]
write.table(as.matrix(t(RNA_data)),
file="../data/training/train_data_RNA_200.txt")
knitr::opts_chunk$set(echo = TRUE)
RNA_expression_matrix <- readRDS("../data/pre_processed/RNA-Seq-filtered.rds")
RNA_annotations <- read_csv("../data/pre_processed/RNA_annotations.csv")
DEG <- read_csv("../DESeq/genes_by_sig.csv")
DEG <- DEG %>%
filter(padj <= 0.05) %>%
distinct(gene, keep_all = TRUE) %>%
head(200)
RNA_expression_matrix <- RNA_expression_matrix[DEG$gene,]
custom.config <- umap.defaults
library(tidyverse)
library(Matrix)
library(umap)
custom.config <- umap.defaults
#custom.config$n_neighbors <- 5
#custom.config$min_dist <- 0.5
umap <- umap(t(RNA_expression_matrix), config = custom.config)
RNA_umap <- tibble(umap_1 = umap$layout[,1],
umap_2 = umap$layout[,2],
Celltype = RNA_annotations$Sub_trajectory_name)
ggplot(RNA_umap, aes(x = umap_1, y = umap_2, color = Celltype)) +
geom_point()
ggsave("plots/UMAP_RNA_200.png")
RNA_expression_matrix <- readRDS("../data/pre_processed/RNA-Seq-filtered.rds")
RNA_annotations <- read_csv("../data/pre_processed/RNA_annotations.csv")
DEG <- read_csv("../DESeq/genes_by_sig.csv")
DEG <- DEG %>%
filter(padj <= 0.05) %>%
distinct(gene, keep_all = TRUE) %>%
head(100)
RNA_expression_matrix <- RNA_expression_matrix[DEG$gene,]
RNA_expression_matrix <- RNA_expression_matrix[DEG$gene,]
custom.config <- umap.defaults
#custom.config$n_neighbors <- 5
#custom.config$min_dist <- 0.5
umap <- umap(t(RNA_expression_matrix), config = custom.config)
RNA_umap <- tibble(umap_1 = umap$layout[,1],
umap_2 = umap$layout[,2],
Celltype = RNA_annotations$Sub_trajectory_name)
ggplot(RNA_umap, aes(x = umap_1, y = umap_2, color = Celltype)) +
geom_point()
ggsave("plots/UMAP_RNA_100.png")
knitr::opts_chunk$set(echo = TRUE)
rds <- readRDS("../data/unpocessed/OMIX928-99-02.rds")
setwd("F:/DS_Project/data_preprocessing")
rds <- readRDS("../data/unpocessed/OMIX928-99-02.rds")
rds <- readRDS("../data/unprocessed/OMIX928-99-02.rds")
genes <- read_csv("../data/unprocessed/gene_annotate.csv")
View(genes)
head(rds)
length(intersect(genes$gene_short_name, rownames(rds))
intersect(genes$gene_short_name, rownames(rds)
intersect(genes$gene_short_name, rownames(rds))
