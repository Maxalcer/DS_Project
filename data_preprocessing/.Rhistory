knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Matrix)
#expression_matrix <- readRDS("../data/OMIX928-99-02.rds") # not included in git
annotations <- read_csv("../data/cell_annotation.csv", show_col_types = FALSE)
#expression_matrix <- readRDS("../data/OMIX928-99-02.rds") # not included in git
annotations <- read_csv("../data/cell_annotation.csv", show_col_types = FALSE)
#expression_matrix <- readRDS("../data/OMIX928-99-02.rds") # not included in git
annotations <- read_csv("../data/cell_annotate.csv", show_col_types = FALSE)
View(annotations)
annotations <- annotations %>%
select(sample, Main_cell_type, Main_trajectory, Sub_trajectory_name) %>%
filter(Main_trajectory == "Haematopoiesis trajectory")
expression_matrix <- readRDS("../data/gene_count_cleaned.RDS") # not included in git
annotations <- read_csv("../data/cell_annotate.csv", show_col_types = FALSE)
annotations <- annotations %>%
select(sample, Main_cell_type, Main_trajectory, Sub_trajectory_name) %>%
filter(Main_trajectory == "Haematopoiesis trajectory")
expression_matrix <- expression_matrix[, annotations$sample]
dim(annotations)
dim(expression_matrix)
dimnames(expression_matrix)[2]
expression_matrix <- expression_matrix[, annotations$sample]
View(expression_matrix)
expression_matrix <- expression_matrix[annotations$sample,]
annotations$sample
expression_matrix[annotations$sample,]
expression_matrix <- readRDS("../data/gene_count_cleaned.RDS") # not included in git
annotations <- read_csv("../data/cell_annotate.csv", show_col_types = FALSE)
annotations <- annotations %>%
select(sample, Main_cell_type, Main_trajectory, Sub_trajectory_name) %>%
filter(Main_trajectory == "Haematopoiesis trajectory",
sample == dimnames(expression_matrix)[2])
annotations <- annotations %>%
select(sample, Main_cell_type, Main_trajectory, Sub_trajectory_name) %>%
filter(Main_trajectory == "Haematopoiesis trajectory",
sample %in% dimnames(expression_matrix)[2])
View(annotations)
annotations <- annotations %>%
filter(Main_trajectory == "Haematopoiesis trajectory",
Total_mRNAs > 400,
doublet_cluster != TRUE,
detected_doublet == FALSE)%>%
select(sample, Main_cell_type, Main_trajectory, Sub_trajectory_name)
expression_matrix <- expression_matrix[,annotations$sample]
annotations <- annotations %>%
filter(Main_trajectory == "Haematopoiesis trajectory",
Total_mRNAs >= 400,
doublet_cluster == FALSE,
detected_doublet == FALSE)%>%
select(sample, Main_cell_type, Main_trajectory, Sub_trajectory_name)
annotations <- read_csv("../data/cell_annotate.csv", show_col_types = FALSE)
annotations <- annotations %>%
filter(#Main_trajectory == "Haematopoiesis trajectory",
Total_mRNAs > 400,
doublet_cluster == FALSE,
detected_doublet == FALSE)%>%
select(sample, Main_cell_type, Main_trajectory, Sub_trajectory_name)
annotations <- read_csv("../data/cell_annotate.csv", show_col_types = FALSE)
annotations <- annotations %>%
filter(#Main_trajectory == "Haematopoiesis trajectory",
Total_mRNAs >= 400,
doublet_cluster == FALSE,
detected_doublet == FALSE)%>%
select(sample, Main_cell_type, Main_trajectory, Sub_trajectory_name)
annotations <- annotations %>%
filter(#Main_trajectory == "Haematopoiesis trajectory",
Total_mRNAs >= 400,
doublet_cluster == FALSE,
detected_doublet == FALSE)%>%
select(sample, Main_cell_type, Main_trajectory, Sub_trajectory_name)
annotations <- read_csv("../data/cell_annotate.csv", show_col_types = FALSE)
annotations <- annotations %>%
filter(#Main_trajectory == "Haematopoiesis trajectory",
all_read_count >= 400,
doublet_cluster == FALSE,
detected_doublet == FALSE)%>%
select(sample, Main_cell_type, Main_trajectory, Sub_trajectory_name)
annotations <- read_csv("../data/cell_annotate.csv", show_col_types = FALSE)
annotations <- annotations %>%
filter(Main_trajectory == "Haematopoiesis trajectory",
Total_mRNAs >= 400,
doublet_cluster == FALSE,
detected_doublet == FALSE)%>%
select(sample, Main_cell_type, Main_trajectory, Sub_trajectory_name)
expression_matrix <- expression_matrix[,annotations$sample]
annotations <- read_csv("../data/cell_annotate.csv", show_col_types = FALSE)
annotations <- annotations %>%
filter(Main_trajectory == "Haematopoiesis trajectory",
Total_mRNAs >= 400,
doublet_cluster == FALSE,
detected_doublet == FALSE,
Sub_trajectory_name != NA)%>%
select(sample, Main_cell_type, Main_trajectory, Sub_trajectory_name)
annotations <- read_csv("../data/cell_annotate.csv", show_col_types = FALSE)
annotations <- annotations %>%
filter(Main_trajectory == "Haematopoiesis trajectory",
Total_mRNAs >= 400,
doublet_cluster == FALSE,
detected_doublet == FALSE,
Sub_trajectory_name != "NA")%>%
select(sample, Main_cell_type, Main_trajectory, Sub_trajectory_name)
expression_matrix <- expression_matrix[,annotations$sample]
row_sums <- rowSums(expression_matrix)
indx_genes <- which(row_sums > max(row_sums)/100)
expression_matrix <- expression_matrix[indx_genes,]
saveRDS(expression_matrix, file = "../data/RNA-Seq-filtered.rds")
write_csv(annotations, "../data/RNA_annotations.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Matrix)
expression_matrix <- readRDS("../data/OMIX928-99-02.rds") # not included in git
annotations <- read_csv("../data/OMIX928-24.csv", show_col_types = FALSE)
annotations <- annotations %>% select(Barcode, Celltype) %>%
filter(grepl("Erythroblast", Celltype)|
grepl("Cycling_Blood_Progenitor", Celltype)|
grepl("Macrophage", Celltype)|
grepl("Megakaryocyte_Progenitor", Celltype)|
grepl("Myeloid_Cell", Celltype)|
grepl("Blood_Progenitor", Celltype)) %>%
mutate(Celltype = replace(Celltype, grepl("Erythroblast", Celltype), "Erythroblast")) %>%
mutate(Celltype = replace(Celltype, grepl("Cycling_Blood_Progenitor", Celltype), "Cycling_Blood_Progenitor")) %>%
mutate(Celltype = replace(Celltype, grepl("Macrophage", Celltype), "Macrophage")) %>%
mutate(Celltype = replace(Celltype, grepl("Blood_Progenitor", Celltype), "Blood_Progenitor"))
write_csv(annotations, "ATAC_annotations.csv")
expression_matrix <- expression_matrix[, annotations$Barcode]
row_sums <- rowSums(expression_matrix)
indx_genes <- which(row_sums > max(row_sums)/100)
expression_matrix <- expression_matrix[indx_genes,]
saveRDS(expression_matrix, file = "../data/ATAC-Seq-filtered.rds")
install.packages("umap")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Matrix)
library(umap)
ATAC_expression_matrix <- readRDS("../data/ATAC-Seq-filtered.rds")
umap <- umap(ATAC_expression_matrix)
umap <- umap(t(ATAC_expression_matrix))
ATAC_annnotations <- read_csv("../data/ATAC_annotations.csv")
ATAC_annnotations <- read_csv("../data/ATAC_annotations.csv", show_col_types = FALSE)
ATAC_annnotations$Barcodes[1:10]
dimnames(t(ATAC_expression_matrix))[1][1:10]
ATAC_annnotations$Barcode[1:10]
dimnames(t(ATAC_expression_matrix))[1][1:10]
ATAC_annnotations$Barcode[1:10]
dimnames(t(ATAC_expression_matrix))[1][1:10]
custom.config <- umap.defaults
custom.config$verbose <- TRUE
umap <- umap(t(ATAC_expression_matrix))
custom.config <- umap.defaults
custom.config$verbose <- "TRUE"
umap <- umap(t(ATAC_expression_matrix))
custom.config <- umap.defaults
custom.config$verbose <- 1
umap <- umap(t(ATAC_expression_matrix))
custom.config <- umap.defaults
custom.config$verbose <- 1
umap <- umap(t(ATAC_expression_matrix), config = custom.config)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Matrix)
library(umap)
library(reticulate)
ATAC_expression_matrix <- readRDS("../data/ATAC-Seq-filtered.rds")
ATAC_annnotations <- read_csv("../data/ATAC_annotations.csv", show_col_types = FALSE)
custom.config <- umap.defaults
custom.config$verbose <- 1
umap <- umap(t(ATAC_expression_matrix),
config = custom.config,
method = "umap-learn")
library(tidyverse)
library(Matrix)
library(umap)
library(reticulate)
use_python("C:/Users/malce/AppData/Local/Microsoft/WindowsApps/python.exe")
py_eval("1+1")
library(tidyverse)
library(Matrix)
library(umap)
library(reticulate)
use_python("C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\python.exe")
library(tidyverse)
library(Matrix)
library(umap)
library(reticulate)
use_python("C:/Program Files/WindowsApps/PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0/python.exe")
